import{_ as s,c as a,o as n,O as e}from"./chunks/framework.403748ff.js";const y=JSON.parse('{"title":"修改git repo历史提交的author","description":"修改git repo历史提交的author","frontmatter":{"title":"修改git repo历史提交的author","description":"修改git repo历史提交的author","aside":false,"date":"2023-4-26","tags":["git"]},"headers":[{"level":2,"title":"操作步骤","slug":"操作步骤","link":"#操作步骤","children":[]}],"relativePath":"posts/git/修改git repo历史提交的author.md"}'),o={name:"posts/git/修改git repo历史提交的author.md"},l=e(`<h1 id="修改git-repo历史提交的author" tabindex="-1">修改git repo历史提交的author <a class="header-anchor" href="#修改git-repo历史提交的author" aria-label="Permalink to &quot;修改git repo历史提交的author&quot;">​</a></h1><h2 id="操作步骤" tabindex="-1">操作步骤 <a class="header-anchor" href="#操作步骤" aria-label="Permalink to &quot;操作步骤&quot;">​</a></h2><p>使用 <code>git rebase -i HEAD~n</code> 命令，表示要修改前 n 次所有的提交。 这里的示例工程，author 信息最早开始出错的那次提交出现在 HEAD~3 节点之后，因此这里的 n 为 3，所以使用 <code>git rebase -i HEAD~3</code>。<code>-i</code> 中的 i 是 interactive，交互的意思。</p><p>输入此命令后，显示以下结果：</p><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pick ac0fcc6 </span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;"> file2</span></span>
<span class="line"><span style="color:#A6ACCD;">pick a0cbfbe </span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;"> file3</span></span>
<span class="line"><span style="color:#A6ACCD;">pick 16ee6eb </span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;"> file4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Rebase d57f11f..16ee6eb onto d57f11f </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">#</span></span>
<span class="line"><span style="color:#A6ACCD;"># Commands:</span></span>
<span class="line"><span style="color:#A6ACCD;"># p, pick </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> use commit</span></span>
<span class="line"><span style="color:#A6ACCD;"># r, reword </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> use commit, but edit the commit message</span></span>
<span class="line"><span style="color:#A6ACCD;"># e, edit </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> use commit, but stop </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> amending</span></span>
<span class="line"><span style="color:#A6ACCD;"># s, squash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> use commit, but meld into previous commit</span></span>
<span class="line"><span style="color:#A6ACCD;"># f, fixup </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> like </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">squash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, but discard this commit</span><span style="color:#676E95;font-style:italic;">&#39;s log message</span></span>
<span class="line"><span style="color:#A6ACCD;"># x, exec </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> run command </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">the rest of the line</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> using shell</span></span></code></pre></div><p>我们要修改第二行和第三行的提交，根据提示，因此把第二行和第三行的 pick 改成 edit 或 e，保存退出。</p><p>保存上面的修改并退出后，git 会依次执行上面的操作，当操作为 pick 时，直接 commit。当操作为 edit 时，会中断，并提示以下信息：</p><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">You can amend the commit </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">, with</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    git commit </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">amend </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Once you are satisfied </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> your changes, run</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    git rebase </span><span style="color:#89DDFF;">--</span><span style="color:#89DDFF;font-style:italic;">continue</span></span></code></pre></div><p>这里的意思是说，你可以使用 <code>git commit --amend</code> 来修改此次提交，修改以后，觉得满意了，执行 <code>git rebase --continue</code> 继续剩下的流程。</p><p>由于我们的主要目的是修改提交者的信息，因此光用 <code>git commit --amend</code> 是不够的，我们要使用 <code>git commit --amend --author &quot;name &lt;yx@gmail.com&gt;&quot;</code> 这样的操作，这一点是修改提交者信息的关键所在。</p><p>使用上面的命令成功修改此次提交的提交者信息后，一定要记得执行 <code>git rebase --continue</code> 继续。</p><p>最终完成以后提示如下：</p><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;"> git rebase </span><span style="color:#89DDFF;">--</span><span style="color:#89DDFF;font-style:italic;">continue</span></span>
<span class="line"><span style="color:#A6ACCD;">Successfully rebased </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> updated refs/heads/master.</span></span></code></pre></div>`,13),p=[l];function t(c,i,r,d,A,D){return n(),a("div",null,p)}const m=s(o,[["render",t]]);export{y as __pageData,m as default};
